// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// `mongodbatlas_private_endpoint_link` provides a Private Endpoint Link resource. This represents a Private Endpoint Link, which adds one interface endpoint to a private endpoint connection in an Atlas project.
// 
// > **IMPORTANT:**You must have one of the following roles to successfully handle the resource:
//   * Organization Owner
//   * Project Owner
// 
// > **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.
type PrivateEndpointInterfaceLink struct {
	s *pulumi.ResourceState
}

// NewPrivateEndpointInterfaceLink registers a new resource with the given unique name, arguments, and options.
func NewPrivateEndpointInterfaceLink(ctx *pulumi.Context,
	name string, args *PrivateEndpointInterfaceLinkArgs, opts ...pulumi.ResourceOpt) (*PrivateEndpointInterfaceLink, error) {
	if args == nil || args.InterfaceEndpointId == nil {
		return nil, errors.New("missing required argument 'InterfaceEndpointId'")
	}
	if args == nil || args.PrivateLinkId == nil {
		return nil, errors.New("missing required argument 'PrivateLinkId'")
	}
	if args == nil || args.ProjectId == nil {
		return nil, errors.New("missing required argument 'ProjectId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["interfaceEndpointId"] = nil
		inputs["privateLinkId"] = nil
		inputs["projectId"] = nil
	} else {
		inputs["interfaceEndpointId"] = args.InterfaceEndpointId
		inputs["privateLinkId"] = args.PrivateLinkId
		inputs["projectId"] = args.ProjectId
	}
	inputs["connectionStatus"] = nil
	inputs["deleteRequested"] = nil
	inputs["errorMessage"] = nil
	s, err := ctx.RegisterResource("mongodbatlas:index/privateEndpointInterfaceLink:PrivateEndpointInterfaceLink", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &PrivateEndpointInterfaceLink{s: s}, nil
}

// GetPrivateEndpointInterfaceLink gets an existing PrivateEndpointInterfaceLink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateEndpointInterfaceLink(ctx *pulumi.Context,
	name string, id pulumi.ID, state *PrivateEndpointInterfaceLinkState, opts ...pulumi.ResourceOpt) (*PrivateEndpointInterfaceLink, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["connectionStatus"] = state.ConnectionStatus
		inputs["deleteRequested"] = state.DeleteRequested
		inputs["errorMessage"] = state.ErrorMessage
		inputs["interfaceEndpointId"] = state.InterfaceEndpointId
		inputs["privateLinkId"] = state.PrivateLinkId
		inputs["projectId"] = state.ProjectId
	}
	s, err := ctx.ReadResource("mongodbatlas:index/privateEndpointInterfaceLink:PrivateEndpointInterfaceLink", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &PrivateEndpointInterfaceLink{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *PrivateEndpointInterfaceLink) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *PrivateEndpointInterfaceLink) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Status of the interface endpoint.
// Returns one of the following values:
func (r *PrivateEndpointInterfaceLink) ConnectionStatus() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["connectionStatus"])
}

// Indicates if Atlas received a request to remove the interface endpoint from the private endpoint connection.
func (r *PrivateEndpointInterfaceLink) DeleteRequested() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["deleteRequested"])
}

// Error message pertaining to the interface endpoint. Returns null if there are no errors.
func (r *PrivateEndpointInterfaceLink) ErrorMessage() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["errorMessage"])
}

// Unique identifier of the interface endpoint you created in your VPC with the AWS resource.
func (r *PrivateEndpointInterfaceLink) InterfaceEndpointId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["interfaceEndpointId"])
}

// Unique identifier of the AWS PrivateLink connection which is created by `mongodbatlas_private_endpoint` resource.
func (r *PrivateEndpointInterfaceLink) PrivateLinkId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["privateLinkId"])
}

// Unique identifier for the project.
func (r *PrivateEndpointInterfaceLink) ProjectId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["projectId"])
}

// Input properties used for looking up and filtering PrivateEndpointInterfaceLink resources.
type PrivateEndpointInterfaceLinkState struct {
	// Status of the interface endpoint.
	// Returns one of the following values:
	ConnectionStatus interface{}
	// Indicates if Atlas received a request to remove the interface endpoint from the private endpoint connection.
	DeleteRequested interface{}
	// Error message pertaining to the interface endpoint. Returns null if there are no errors.
	ErrorMessage interface{}
	// Unique identifier of the interface endpoint you created in your VPC with the AWS resource.
	InterfaceEndpointId interface{}
	// Unique identifier of the AWS PrivateLink connection which is created by `mongodbatlas_private_endpoint` resource.
	PrivateLinkId interface{}
	// Unique identifier for the project.
	ProjectId interface{}
}

// The set of arguments for constructing a PrivateEndpointInterfaceLink resource.
type PrivateEndpointInterfaceLinkArgs struct {
	// Unique identifier of the interface endpoint you created in your VPC with the AWS resource.
	InterfaceEndpointId interface{}
	// Unique identifier of the AWS PrivateLink connection which is created by `mongodbatlas_private_endpoint` resource.
	PrivateLinkId interface{}
	// Unique identifier for the project.
	ProjectId interface{}
}
