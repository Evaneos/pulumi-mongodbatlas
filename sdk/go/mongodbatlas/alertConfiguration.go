// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// `mongodbatlas_alert_configuration` provides an Alert Configuration resource to define the conditions that trigger an alert and the methods of notification within a MongoDB Atlas project.
// 
// > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
type AlertConfiguration struct {
	s *pulumi.ResourceState
}

// NewAlertConfiguration registers a new resource with the given unique name, arguments, and options.
func NewAlertConfiguration(ctx *pulumi.Context,
	name string, args *AlertConfigurationArgs, opts ...pulumi.ResourceOpt) (*AlertConfiguration, error) {
	if args == nil || args.EventType == nil {
		return nil, errors.New("missing required argument 'EventType'")
	}
	if args == nil || args.Notifications == nil {
		return nil, errors.New("missing required argument 'Notifications'")
	}
	if args == nil || args.ProjectId == nil {
		return nil, errors.New("missing required argument 'ProjectId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["enabled"] = nil
		inputs["eventType"] = nil
		inputs["matchers"] = nil
		inputs["metricThreshold"] = nil
		inputs["notifications"] = nil
		inputs["projectId"] = nil
	} else {
		inputs["enabled"] = args.Enabled
		inputs["eventType"] = args.EventType
		inputs["matchers"] = args.Matchers
		inputs["metricThreshold"] = args.MetricThreshold
		inputs["notifications"] = args.Notifications
		inputs["projectId"] = args.ProjectId
	}
	inputs["alertConfigurationId"] = nil
	inputs["created"] = nil
	inputs["updated"] = nil
	s, err := ctx.RegisterResource("mongodbatlas:index/alertConfiguration:AlertConfiguration", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AlertConfiguration{s: s}, nil
}

// GetAlertConfiguration gets an existing AlertConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertConfiguration(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AlertConfigurationState, opts ...pulumi.ResourceOpt) (*AlertConfiguration, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["alertConfigurationId"] = state.AlertConfigurationId
		inputs["created"] = state.Created
		inputs["enabled"] = state.Enabled
		inputs["eventType"] = state.EventType
		inputs["matchers"] = state.Matchers
		inputs["metricThreshold"] = state.MetricThreshold
		inputs["notifications"] = state.Notifications
		inputs["projectId"] = state.ProjectId
		inputs["updated"] = state.Updated
	}
	s, err := ctx.ReadResource("mongodbatlas:index/alertConfiguration:AlertConfiguration", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AlertConfiguration{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *AlertConfiguration) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *AlertConfiguration) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Unique identifier for the alert configuration.
func (r *AlertConfiguration) AlertConfigurationId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["alertConfigurationId"])
}

// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was created.
func (r *AlertConfiguration) Created() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["created"])
}

// It is not required, but If the attribute is omitted, by default will be false, and the configuration would be disabled. You must set true to enable the configuration.
func (r *AlertConfiguration) Enabled() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["enabled"])
}

// The type of event that will trigger an alert.
// Alert type 	Possible values:
// * Host
// - `OUTSIDE_METRIC_THRESHOLD`
// - `HOST_RESTARTED`
// - `HOST_UPGRADED`
// - `HOST_NOW_SECONDARY`
// - `HOST_NOW_PRIMARY`
// * Replica set
// - `NO_PRIMARY`
// - `TOO_MANY_ELECTIONS`
// * Sharded cluster
// - `CLUSTER_MONGOS_IS_MISSING`
// - `User`
// - `JOINED_GROUP`
// - `REMOVED_FROM_GROUP`
// - `USER_ROLES_CHANGED_AUDIT`
// * Project
// - `USERS_AWAITING_APPROVAL`
// - `USERS_WITHOUT_MULTI_FACTOR_AUTH`
// - `GROUP_CREATED`
// * Team
// - `JOINED_TEAM`
// - `REMOVED_FROM_TEAM`
// * Organization
// - `INVITED_TO_ORG`
// - `JOINED_ORG`
// * Data Explorer
// - `DATA_EXPLORER`
// - `DATA_EXPLORER_CRUD`
// * Billing
// - `CREDIT_CARD_ABOUT_TO_EXPIRE`
// - `CHARGE_SUCCEEDED`
// - `INVOICE_CLOSED`
func (r *AlertConfiguration) EventType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["eventType"])
}

func (r *AlertConfiguration) Matchers() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["matchers"])
}

func (r *AlertConfiguration) MetricThreshold() *pulumi.Output {
	return r.s.State["metricThreshold"]
}

func (r *AlertConfiguration) Notifications() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["notifications"])
}

// The ID of the project where the alert configuration will create.
func (r *AlertConfiguration) ProjectId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["projectId"])
}

// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was last updated.
func (r *AlertConfiguration) Updated() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["updated"])
}

// Input properties used for looking up and filtering AlertConfiguration resources.
type AlertConfigurationState struct {
	// Unique identifier for the alert configuration.
	AlertConfigurationId interface{}
	// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was created.
	Created interface{}
	// It is not required, but If the attribute is omitted, by default will be false, and the configuration would be disabled. You must set true to enable the configuration.
	Enabled interface{}
	// The type of event that will trigger an alert.
	// Alert type 	Possible values:
	// * Host
	// - `OUTSIDE_METRIC_THRESHOLD`
	// - `HOST_RESTARTED`
	// - `HOST_UPGRADED`
	// - `HOST_NOW_SECONDARY`
	// - `HOST_NOW_PRIMARY`
	// * Replica set
	// - `NO_PRIMARY`
	// - `TOO_MANY_ELECTIONS`
	// * Sharded cluster
	// - `CLUSTER_MONGOS_IS_MISSING`
	// - `User`
	// - `JOINED_GROUP`
	// - `REMOVED_FROM_GROUP`
	// - `USER_ROLES_CHANGED_AUDIT`
	// * Project
	// - `USERS_AWAITING_APPROVAL`
	// - `USERS_WITHOUT_MULTI_FACTOR_AUTH`
	// - `GROUP_CREATED`
	// * Team
	// - `JOINED_TEAM`
	// - `REMOVED_FROM_TEAM`
	// * Organization
	// - `INVITED_TO_ORG`
	// - `JOINED_ORG`
	// * Data Explorer
	// - `DATA_EXPLORER`
	// - `DATA_EXPLORER_CRUD`
	// * Billing
	// - `CREDIT_CARD_ABOUT_TO_EXPIRE`
	// - `CHARGE_SUCCEEDED`
	// - `INVOICE_CLOSED`
	EventType interface{}
	Matchers interface{}
	MetricThreshold interface{}
	Notifications interface{}
	// The ID of the project where the alert configuration will create.
	ProjectId interface{}
	// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was last updated.
	Updated interface{}
}

// The set of arguments for constructing a AlertConfiguration resource.
type AlertConfigurationArgs struct {
	// It is not required, but If the attribute is omitted, by default will be false, and the configuration would be disabled. You must set true to enable the configuration.
	Enabled interface{}
	// The type of event that will trigger an alert.
	// Alert type 	Possible values:
	// * Host
	// - `OUTSIDE_METRIC_THRESHOLD`
	// - `HOST_RESTARTED`
	// - `HOST_UPGRADED`
	// - `HOST_NOW_SECONDARY`
	// - `HOST_NOW_PRIMARY`
	// * Replica set
	// - `NO_PRIMARY`
	// - `TOO_MANY_ELECTIONS`
	// * Sharded cluster
	// - `CLUSTER_MONGOS_IS_MISSING`
	// - `User`
	// - `JOINED_GROUP`
	// - `REMOVED_FROM_GROUP`
	// - `USER_ROLES_CHANGED_AUDIT`
	// * Project
	// - `USERS_AWAITING_APPROVAL`
	// - `USERS_WITHOUT_MULTI_FACTOR_AUTH`
	// - `GROUP_CREATED`
	// * Team
	// - `JOINED_TEAM`
	// - `REMOVED_FROM_TEAM`
	// * Organization
	// - `INVITED_TO_ORG`
	// - `JOINED_ORG`
	// * Data Explorer
	// - `DATA_EXPLORER`
	// - `DATA_EXPLORER_CRUD`
	// * Billing
	// - `CREDIT_CARD_ABOUT_TO_EXPIRE`
	// - `CHARGE_SUCCEEDED`
	// - `INVOICE_CLOSED`
	EventType interface{}
	Matchers interface{}
	MetricThreshold interface{}
	Notifications interface{}
	// The ID of the project where the alert configuration will create.
	ProjectId interface{}
}
