// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// `mongodbatlas_cloud_provider_snapshot` provides an Cloud Provider Snapshot entry datasource. Atlas Cloud Provider Snapshots provide localized backup storage using the native snapshot functionality of the clusterâ€™s cloud service provider.
// 
// > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
func LookupCloudProviderSnapshot(ctx *pulumi.Context, args *GetCloudProviderSnapshotArgs) (*GetCloudProviderSnapshotResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["clusterName"] = args.ClusterName
		inputs["projectId"] = args.ProjectId
		inputs["snapshotId"] = args.SnapshotId
	}
	outputs, err := ctx.Invoke("mongodbatlas:index/getCloudProviderSnapshot:getCloudProviderSnapshot", inputs)
	if err != nil {
		return nil, err
	}
	return &GetCloudProviderSnapshotResult{
		ClusterName: outputs["clusterName"],
		CreatedAt: outputs["createdAt"],
		Description: outputs["description"],
		ExpiresAt: outputs["expiresAt"],
		MasterKeyUuid: outputs["masterKeyUuid"],
		MongodVersion: outputs["mongodVersion"],
		ProjectId: outputs["projectId"],
		SnapshotId: outputs["snapshotId"],
		SnapshotType: outputs["snapshotType"],
		Status: outputs["status"],
		StorageSizeBytes: outputs["storageSizeBytes"],
		Type: outputs["type"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getCloudProviderSnapshot.
type GetCloudProviderSnapshotArgs struct {
	// The name of the Atlas cluster that contains the snapshot you want to retrieve.
	ClusterName interface{}
	ProjectId interface{}
	// The unique identifier of the snapshot you want to retrieve.
	SnapshotId interface{}
}

// A collection of values returned by getCloudProviderSnapshot.
type GetCloudProviderSnapshotResult struct {
	ClusterName interface{}
	// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
	CreatedAt interface{}
	// UDescription of the snapshot. Only present for on-demand snapshots.
	Description interface{}
	// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
	ExpiresAt interface{}
	// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
	MasterKeyUuid interface{}
	// Version of the MongoDB server.
	MongodVersion interface{}
	ProjectId interface{}
	SnapshotId interface{}
	// Specified the type of snapshot. Valid values are onDemand and scheduled.
	SnapshotType interface{}
	// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
	Status interface{}
	// Specifies the size of the snapshot in bytes.
	StorageSizeBytes interface{}
	// Specifies the type of cluster: replicaSet or shardedCluster.
	Type interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
