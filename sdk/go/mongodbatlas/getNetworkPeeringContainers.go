// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// `mongodbatlas_network_containers` describes all Network Peering Containers. The data source requires your Project ID.
// 
// > **NOTE:** Groups and projects are synonymous terms. You may find **group_id** in the official documentation.
func LookupNetworkPeeringContainers(ctx *pulumi.Context, args *GetNetworkPeeringContainersArgs) (*GetNetworkPeeringContainersResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["projectId"] = args.ProjectId
		inputs["providerName"] = args.ProviderName
	}
	outputs, err := ctx.Invoke("mongodbatlas:index/getNetworkPeeringContainers:getNetworkPeeringContainers", inputs)
	if err != nil {
		return nil, err
	}
	return &GetNetworkPeeringContainersResult{
		ProjectId: outputs["projectId"],
		ProviderName: outputs["providerName"],
		Results: outputs["results"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getNetworkPeeringContainers.
type GetNetworkPeeringContainersArgs struct {
	// The unique ID for the project to create the database user.
	ProjectId interface{}
	// Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
	ProviderName interface{}
}

// A collection of values returned by getNetworkPeeringContainers.
type GetNetworkPeeringContainersResult struct {
	ProjectId interface{}
	// Cloud provider for this Network Peering connection. If omitted, Atlas sets this parameter to AWS.
	ProviderName interface{}
	// A list where each represents a Network Peering Container.
	Results interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
