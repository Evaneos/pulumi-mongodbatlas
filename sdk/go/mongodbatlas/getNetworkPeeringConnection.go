// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// `mongodbatlas_network_peering` describes a Network Peering Connection.
// 
// > **NOTE:** Groups and projects are synonymous terms. You may find **group_id** in the official documentation.
func LookupNetworkPeeringConnection(ctx *pulumi.Context, args *GetNetworkPeeringConnectionArgs) (*GetNetworkPeeringConnectionResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["peeringId"] = args.PeeringId
		inputs["projectId"] = args.ProjectId
	}
	outputs, err := ctx.Invoke("mongodbatlas:index/getNetworkPeeringConnection:getNetworkPeeringConnection", inputs)
	if err != nil {
		return nil, err
	}
	return &GetNetworkPeeringConnectionResult{
		AccepterRegionName: outputs["accepterRegionName"],
		AtlasCidrBlock: outputs["atlasCidrBlock"],
		AtlasId: outputs["atlasId"],
		AwsAccountId: outputs["awsAccountId"],
		AzureDirectoryId: outputs["azureDirectoryId"],
		AzureSubscriptionId: outputs["azureSubscriptionId"],
		ConnectionId: outputs["connectionId"],
		ContainerId: outputs["containerId"],
		ErrorMessage: outputs["errorMessage"],
		ErrorState: outputs["errorState"],
		ErrorStateName: outputs["errorStateName"],
		GcpProjectId: outputs["gcpProjectId"],
		NetworkName: outputs["networkName"],
		PeeringId: outputs["peeringId"],
		ProjectId: outputs["projectId"],
		ProviderName: outputs["providerName"],
		ResourceGroupName: outputs["resourceGroupName"],
		RouteTableCidrBlock: outputs["routeTableCidrBlock"],
		Status: outputs["status"],
		StatusName: outputs["statusName"],
		VnetName: outputs["vnetName"],
		VpcId: outputs["vpcId"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getNetworkPeeringConnection.
type GetNetworkPeeringConnectionArgs struct {
	// Atlas assigned unique ID for the peering connection.
	PeeringId interface{}
	// The unique ID for the project to create the database user.
	ProjectId interface{}
}

// A collection of values returned by getNetworkPeeringConnection.
type GetNetworkPeeringConnectionResult struct {
	// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
	AccepterRegionName interface{}
	// Unique identifier for an Azure AD directory.
	AtlasCidrBlock interface{}
	AtlasId interface{}
	// Account ID of the owner of the peer VPC.
	AwsAccountId interface{}
	// Unique identifier for an Azure AD directory.
	AzureDirectoryId interface{}
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId interface{}
	// Unique identifier for the peering connection.
	ConnectionId interface{}
	ContainerId interface{}
	// When `"status" : "FAILED"`, Atlas provides a description of the error.
	ErrorMessage interface{}
	// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
	ErrorState interface{}
	// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
	ErrorStateName interface{}
	// GCP project ID of the owner of the network peer. 
	GcpProjectId interface{}
	// Name of the network peer to which Atlas connects.
	NetworkName interface{}
	PeeringId interface{}
	ProjectId interface{}
	// Cloud provider for this VPC peering connection. If omitted, Atlas sets this parameter to AWS. (Possible Values `AWS`, `AZURE`, `GCP`).
	ProviderName interface{}
	// Name of your Azure resource group. 
	ResourceGroupName interface{}
	// Peer VPC CIDR block or subnet.
	RouteTableCidrBlock interface{}
	// Status of the Atlas network peering connection: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING`, `WAITING_FOR_USER`.
	Status interface{}
	// The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
	StatusName interface{}
	// Name of your Azure VNet.
	VnetName interface{}
	// Unique identifier of the peer VPC.
	VpcId interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
