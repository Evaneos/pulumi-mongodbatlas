// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// `mongodbatlas_cluster` describes a Cluster. The. The data source requires your Project ID.
// 
// > **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.
// 
// > **IMPORTANT:**
// <br> &#8226; Changes to cluster configurations can affect costs. Before making changes, please see [Billing](https://docs.atlas.mongodb.com/billing/).
// <br> &#8226; If your Atlas project contains a custom role that uses actions introduced in a specific MongoDB version, you cannot create a cluster with a MongoDB version less than that version unless you delete the custom role.
func LookupCluster(ctx *pulumi.Context, args *GetClusterArgs) (*GetClusterResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["name"] = args.Name
		inputs["projectId"] = args.ProjectId
	}
	outputs, err := ctx.Invoke("mongodbatlas:index/getCluster:getCluster", inputs)
	if err != nil {
		return nil, err
	}
	return &GetClusterResult{
		AutoScalingDiskGbEnabled: outputs["autoScalingDiskGbEnabled"],
		BackingProviderName: outputs["backingProviderName"],
		BackupEnabled: outputs["backupEnabled"],
		BiConnector: outputs["biConnector"],
		ClusterType: outputs["clusterType"],
		DiskSizeGb: outputs["diskSizeGb"],
		EncryptionAtRestProvider: outputs["encryptionAtRestProvider"],
		Labels: outputs["labels"],
		MongoDbMajorVersion: outputs["mongoDbMajorVersion"],
		MongoDbVersion: outputs["mongoDbVersion"],
		MongoUri: outputs["mongoUri"],
		MongoUriUpdated: outputs["mongoUriUpdated"],
		MongoUriWithOptions: outputs["mongoUriWithOptions"],
		Name: outputs["name"],
		NumShards: outputs["numShards"],
		Paused: outputs["paused"],
		PitEnabled: outputs["pitEnabled"],
		Plugin: outputs["plugin"],
		ProjectId: outputs["projectId"],
		ProviderBackupEnabled: outputs["providerBackupEnabled"],
		ProviderDiskIops: outputs["providerDiskIops"],
		ProviderDiskTypeName: outputs["providerDiskTypeName"],
		ProviderEncryptEbsVolume: outputs["providerEncryptEbsVolume"],
		ProviderInstanceSizeName: outputs["providerInstanceSizeName"],
		ProviderName: outputs["providerName"],
		ProviderRegionName: outputs["providerRegionName"],
		ProviderVolumeType: outputs["providerVolumeType"],
		ReplicationFactor: outputs["replicationFactor"],
		ReplicationSpecs: outputs["replicationSpecs"],
		SrvAddress: outputs["srvAddress"],
		StateName: outputs["stateName"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getCluster.
type GetClusterArgs struct {
	// Name of the cluster as it appears in Atlas. Once the cluster is created, its name cannot be changed.
	Name interface{}
	// The unique ID for the project to create the database user.
	ProjectId interface{}
}

// A collection of values returned by getCluster.
type GetClusterResult struct {
	// Indicates whether disk auto-scaling is enabled.
	AutoScalingDiskGbEnabled interface{}
	// Indicates Cloud service provider on which the server for a multi-tenant cluster is provisioned.
	BackingProviderName interface{}
	// Indicates whether Atlas continuous backups are enabled for the cluster.
	BackupEnabled interface{}
	// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
	BiConnector interface{}
	// Indicates the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
	ClusterType interface{}
	// Indicates the size in gigabytes of the server’s root volume (AWS/GCP Only).
	DiskSizeGb interface{}
	// Indicates whether Encryption at Rest is enabled or disabled.
	EncryptionAtRestProvider interface{}
	Labels interface{}
	// Indicates the version of the cluster to deploy.
	MongoDbMajorVersion interface{}
	// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
	MongoDbVersion interface{}
	// Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
	MongoUri interface{}
	// Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
	MongoUriUpdated interface{}
	// Describes connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
	MongoUriWithOptions interface{}
	// The name of the current plugin
	Name interface{}
	// Number of shards to deploy in the specified zone.
	NumShards interface{}
	// Flag that indicates whether the cluster is paused or not.
	Paused interface{}
	// Flag that indicates if the cluster uses Point-in-Time backups.
	PitEnabled interface{}
	Plugin interface{}
	ProjectId interface{}
	// Flag indicating if the cluster uses Cloud Provider Snapshots for backups.
	ProviderBackupEnabled interface{}
	// Indicates the maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected providerSettings.instanceSizeName and diskSizeGB.
	ProviderDiskIops interface{}
	// Describes Azure disk type of the server’s root volume (Azure Only).
	ProviderDiskTypeName interface{}
	// Indicates whether the Amazon EBS encryption is enabled. This feature encrypts the server’s root volume for both data at rest within the volume and data moving between the volume and the instance.
	ProviderEncryptEbsVolume interface{}
	// Atlas provides different instance sizes, each with a default storage capacity and RAM size.
	ProviderInstanceSizeName interface{}
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName interface{}
	// Indicates Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the Atlas Region name, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	ProviderRegionName interface{}
	// Indicates the type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.
	ProviderVolumeType interface{}
	// Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
	ReplicationFactor interface{}
	// Configuration for cluster regions.  See Replication Spec below for more details.
	ReplicationSpecs interface{}
	// Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
	SrvAddress interface{}
	// Indicates the current state of the cluster. The possible states are:
	// - IDLE
	// - CREATING
	// - UPDATING
	// - DELETING
	// - DELETED
	// - REPAIRING
	StateName interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
