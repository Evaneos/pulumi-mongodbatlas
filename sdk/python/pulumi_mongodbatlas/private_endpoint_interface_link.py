# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from . import utilities, tables

class PrivateEndpointInterfaceLink(pulumi.CustomResource):
    connection_status: pulumi.Output[str]
    """
    Status of the interface endpoint.
    Returns one of the following values:
    """
    delete_requested: pulumi.Output[bool]
    """
    Indicates if Atlas received a request to remove the interface endpoint from the private endpoint connection.
    """
    error_message: pulumi.Output[str]
    """
    Error message pertaining to the interface endpoint. Returns null if there are no errors.
    """
    interface_endpoint_id: pulumi.Output[str]
    """
    Unique identifier of the interface endpoint you created in your VPC with the AWS resource.
    """
    private_link_id: pulumi.Output[str]
    """
    Unique identifier of the AWS PrivateLink connection which is created by `mongodbatlas_private_endpoint` resource.
    """
    project_id: pulumi.Output[str]
    """
    Unique identifier for the project.
    """
    def __init__(__self__, resource_name, opts=None, interface_endpoint_id=None, private_link_id=None, project_id=None, __name__=None, __opts__=None):
        """
        `mongodbatlas_private_endpoint_link` provides a Private Endpoint Link resource. This represents a Private Endpoint Link, which adds one interface endpoint to a private endpoint connection in an Atlas project.
        
        > **IMPORTANT:**You must have one of the following roles to successfully handle the resource:
          * Organization Owner
          * Project Owner
        
        > **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] interface_endpoint_id: Unique identifier of the interface endpoint you created in your VPC with the AWS resource.
        :param pulumi.Input[str] private_link_id: Unique identifier of the AWS PrivateLink connection which is created by `mongodbatlas_private_endpoint` resource.
        :param pulumi.Input[str] project_id: Unique identifier for the project.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if interface_endpoint_id is None:
            raise TypeError("Missing required property 'interface_endpoint_id'")
        __props__['interface_endpoint_id'] = interface_endpoint_id

        if private_link_id is None:
            raise TypeError("Missing required property 'private_link_id'")
        __props__['private_link_id'] = private_link_id

        if project_id is None:
            raise TypeError("Missing required property 'project_id'")
        __props__['project_id'] = project_id

        __props__['connection_status'] = None
        __props__['delete_requested'] = None
        __props__['error_message'] = None

        super(PrivateEndpointInterfaceLink, __self__).__init__(
            'mongodbatlas:index/privateEndpointInterfaceLink:PrivateEndpointInterfaceLink',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

