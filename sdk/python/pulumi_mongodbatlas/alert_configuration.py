# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from . import utilities, tables

class AlertConfiguration(pulumi.CustomResource):
    alert_configuration_id: pulumi.Output[str]
    """
    Unique identifier for the alert configuration.
    """
    created: pulumi.Output[str]
    """
    Timestamp in ISO 8601 date and time format in UTC when this alert configuration was created.
    """
    enabled: pulumi.Output[bool]
    """
    It is not required, but If the attribute is omitted, by default will be false, and the configuration would be disabled. You must set true to enable the configuration.
    """
    event_type: pulumi.Output[str]
    """
    The type of event that will trigger an alert.
    Alert type 	Possible values:
    * Host
    - `OUTSIDE_METRIC_THRESHOLD`
    - `HOST_RESTARTED`
    - `HOST_UPGRADED`
    - `HOST_NOW_SECONDARY`
    - `HOST_NOW_PRIMARY`
    * Replica set
    - `NO_PRIMARY`
    - `TOO_MANY_ELECTIONS`
    * Sharded cluster
    - `CLUSTER_MONGOS_IS_MISSING`
    - `User`
    - `JOINED_GROUP`
    - `REMOVED_FROM_GROUP`
    - `USER_ROLES_CHANGED_AUDIT`
    * Project
    - `USERS_AWAITING_APPROVAL`
    - `USERS_WITHOUT_MULTI_FACTOR_AUTH`
    - `GROUP_CREATED`
    * Team
    - `JOINED_TEAM`
    - `REMOVED_FROM_TEAM`
    * Organization
    - `INVITED_TO_ORG`
    - `JOINED_ORG`
    * Data Explorer
    - `DATA_EXPLORER`
    - `DATA_EXPLORER_CRUD`
    * Billing
    - `CREDIT_CARD_ABOUT_TO_EXPIRE`
    - `CHARGE_SUCCEEDED`
    - `INVOICE_CLOSED`
    """
    matchers: pulumi.Output[list]
    metric_threshold: pulumi.Output[dict]
    notifications: pulumi.Output[list]
    project_id: pulumi.Output[str]
    """
    The ID of the project where the alert configuration will create.
    """
    updated: pulumi.Output[str]
    """
    Timestamp in ISO 8601 date and time format in UTC when this alert configuration was last updated.
    """
    def __init__(__self__, resource_name, opts=None, enabled=None, event_type=None, matchers=None, metric_threshold=None, notifications=None, project_id=None, __name__=None, __opts__=None):
        """
        `mongodbatlas_alert_configuration` provides an Alert Configuration resource to define the conditions that trigger an alert and the methods of notification within a MongoDB Atlas project.
        
        > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] enabled: It is not required, but If the attribute is omitted, by default will be false, and the configuration would be disabled. You must set true to enable the configuration.
        :param pulumi.Input[str] event_type: The type of event that will trigger an alert.
               Alert type 	Possible values:
               * Host
               - `OUTSIDE_METRIC_THRESHOLD`
               - `HOST_RESTARTED`
               - `HOST_UPGRADED`
               - `HOST_NOW_SECONDARY`
               - `HOST_NOW_PRIMARY`
               * Replica set
               - `NO_PRIMARY`
               - `TOO_MANY_ELECTIONS`
               * Sharded cluster
               - `CLUSTER_MONGOS_IS_MISSING`
               - `User`
               - `JOINED_GROUP`
               - `REMOVED_FROM_GROUP`
               - `USER_ROLES_CHANGED_AUDIT`
               * Project
               - `USERS_AWAITING_APPROVAL`
               - `USERS_WITHOUT_MULTI_FACTOR_AUTH`
               - `GROUP_CREATED`
               * Team
               - `JOINED_TEAM`
               - `REMOVED_FROM_TEAM`
               * Organization
               - `INVITED_TO_ORG`
               - `JOINED_ORG`
               * Data Explorer
               - `DATA_EXPLORER`
               - `DATA_EXPLORER_CRUD`
               * Billing
               - `CREDIT_CARD_ABOUT_TO_EXPIRE`
               - `CHARGE_SUCCEEDED`
               - `INVOICE_CLOSED`
        :param pulumi.Input[str] project_id: The ID of the project where the alert configuration will create.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['enabled'] = enabled

        if event_type is None:
            raise TypeError("Missing required property 'event_type'")
        __props__['event_type'] = event_type

        __props__['matchers'] = matchers

        __props__['metric_threshold'] = metric_threshold

        if notifications is None:
            raise TypeError("Missing required property 'notifications'")
        __props__['notifications'] = notifications

        if project_id is None:
            raise TypeError("Missing required property 'project_id'")
        __props__['project_id'] = project_id

        __props__['alert_configuration_id'] = None
        __props__['created'] = None
        __props__['updated'] = None

        super(AlertConfiguration, __self__).__init__(
            'mongodbatlas:index/alertConfiguration:AlertConfiguration',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

