# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from . import utilities, tables

class EncryptionAtRest(pulumi.CustomResource):
    aws_kms: pulumi.Output[dict]
    """
    Specifies AWS KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
    """
    azure_key_vault: pulumi.Output[dict]
    """
    Specifies Azure Key Vault configuration details and whether Encryption at Rest is enabled for an Atlas project.
    """
    google_cloud_kms: pulumi.Output[dict]
    """
    Specifies GCP KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
    """
    project_id: pulumi.Output[str]
    """
    The unique identifier for the project.
    """
    def __init__(__self__, resource_name, opts=None, aws_kms=None, azure_key_vault=None, google_cloud_kms=None, project_id=None, __name__=None, __opts__=None):
        """
        `mongodbatlas_encryption_at_rest` Atlas encrypts your data at rest using encrypted storage media. 
        Using keys you manage with AWS KMS, Atlas encrypts your data a second time when it writes it to the MongoDB encrypted storage engine. 
        You can use the following clouds: AWS CMK, AZURE KEY VAULT and GOOGLE KEY VAULT to encrypt the MongoDB master encryption keys.
        
        > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] aws_kms: Specifies AWS KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
        :param pulumi.Input[dict] azure_key_vault: Specifies Azure Key Vault configuration details and whether Encryption at Rest is enabled for an Atlas project.
        :param pulumi.Input[dict] google_cloud_kms: Specifies GCP KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
        :param pulumi.Input[str] project_id: The unique identifier for the project.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['aws_kms'] = aws_kms

        __props__['azure_key_vault'] = azure_key_vault

        __props__['google_cloud_kms'] = google_cloud_kms

        if project_id is None:
            raise TypeError("Missing required property 'project_id'")
        __props__['project_id'] = project_id

        super(EncryptionAtRest, __self__).__init__(
            'mongodbatlas:index/encryptionAtRest:EncryptionAtRest',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

