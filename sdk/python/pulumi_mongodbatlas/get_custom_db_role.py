# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from . import utilities, tables

class GetCustomDbRoleResult:
    """
    A collection of values returned by getCustomDbRole.
    """
    def __init__(__self__, actions=None, inherited_roles=None, project_id=None, role_name=None, id=None):
        if actions and not isinstance(actions, list):
            raise TypeError("Expected argument 'actions' to be a list")
        __self__.actions = actions
        if inherited_roles and not isinstance(inherited_roles, list):
            raise TypeError("Expected argument 'inherited_roles' to be a list")
        __self__.inherited_roles = inherited_roles
        if project_id and not isinstance(project_id, str):
            raise TypeError("Expected argument 'project_id' to be a str")
        __self__.project_id = project_id
        if role_name and not isinstance(role_name, str):
            raise TypeError("Expected argument 'role_name' to be a str")
        __self__.role_name = role_name
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """

async def get_custom_db_role(inherited_roles=None,project_id=None,role_name=None,opts=None):
    """
    `mongodbatlas_custom_db_role` describe a Custom DB Role. This represents a custom db role.
    
    > **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.
    """
    __args__ = dict()

    __args__['inheritedRoles'] = inherited_roles
    __args__['projectId'] = project_id
    __args__['roleName'] = role_name
    __ret__ = await pulumi.runtime.invoke('mongodbatlas:index/getCustomDbRole:getCustomDbRole', __args__, opts=opts)

    return GetCustomDbRoleResult(
        actions=__ret__.get('actions'),
        inherited_roles=__ret__.get('inheritedRoles'),
        project_id=__ret__.get('projectId'),
        role_name=__ret__.get('roleName'),
        id=__ret__.get('id'))
