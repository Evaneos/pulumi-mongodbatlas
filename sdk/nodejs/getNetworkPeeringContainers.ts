// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `mongodbatlas_network_containers` describes all Network Peering Containers. The data source requires your Project ID.
 * 
 * > **NOTE:** Groups and projects are synonymous terms. You may find **group_id** in the official documentation.
 */
export function getNetworkPeeringContainers(args: GetNetworkPeeringContainersArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkPeeringContainersResult> {
    return pulumi.runtime.invoke("mongodbatlas:index/getNetworkPeeringContainers:getNetworkPeeringContainers", {
        "projectId": args.projectId,
        "providerName": args.providerName,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkPeeringContainers.
 */
export interface GetNetworkPeeringContainersArgs {
    /**
     * The unique ID for the project to create the database user.
     */
    readonly projectId: string;
    /**
     * Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
     */
    readonly providerName: string;
}

/**
 * A collection of values returned by getNetworkPeeringContainers.
 */
export interface GetNetworkPeeringContainersResult {
    readonly projectId: string;
    /**
     * Cloud provider for this Network Peering connection. If omitted, Atlas sets this parameter to AWS.
     */
    readonly providerName: string;
    /**
     * A list where each represents a Network Peering Container.
     */
    readonly results: { atlasCidrBlock: string, azureSubscriptionId: string, gcpProjectId: string, id: string, networkName: string, providerName: string, provisioned: boolean, region: string, regionName: string, vnetName: string, vpcId: string }[];
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
