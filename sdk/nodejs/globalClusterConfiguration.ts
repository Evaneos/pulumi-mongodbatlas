// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `mongodbatlas_global_cluster_config` provides a Global Cluster Configuration resource.
 * 
 * 
 * > **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.
 */
export class GlobalClusterConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing GlobalClusterConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GlobalClusterConfigurationState, opts?: pulumi.CustomResourceOptions): GlobalClusterConfiguration {
        return new GlobalClusterConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mongodbatlas:index/globalClusterConfiguration:GlobalClusterConfiguration';

    /**
     * Returns true if the given object is an instance of GlobalClusterConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GlobalClusterConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GlobalClusterConfiguration.__pulumiType;
    }

    public readonly clusterName!: pulumi.Output<string>;
    /**
     * A map of all custom zone mappings defined for the Global Cluster. Atlas automatically maps each location code to the closest geographical zone. Custom zone mappings allow administrators to override these automatic mappings. If your Global Cluster does not have any custom zone mappings, this document is empty.
     */
    public /*out*/ readonly customZoneMapping!: pulumi.Output<{[key: string]: any}>;
    /**
     * Each element in the list maps one ISO location code to a zone in your Global Cluster. See Custom Zone Mapping below for more details.
     */
    public readonly customZoneMappings!: pulumi.Output<{ location: string, zone: string }[] | undefined>;
    /**
     * Add a managed namespaces to a Global Cluster. For more information about managed namespaces, see [Global Clusters](https://docs.atlas.mongodb.com/reference/api/global-clusters/). See Managed Namespace below for more details.
     */
    public readonly managedNamespaces!: pulumi.Output<{ collection: string, customShardKey: string, db: string }[]>;
    /**
     * The unique ID for the project to create the database user.
     * * `cluster_name - (Required) The name of the Global Cluster.
     */
    public readonly projectId!: pulumi.Output<string>;

    /**
     * Create a GlobalClusterConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GlobalClusterConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GlobalClusterConfigurationArgs | GlobalClusterConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as GlobalClusterConfigurationState | undefined;
            inputs["clusterName"] = state ? state.clusterName : undefined;
            inputs["customZoneMapping"] = state ? state.customZoneMapping : undefined;
            inputs["customZoneMappings"] = state ? state.customZoneMappings : undefined;
            inputs["managedNamespaces"] = state ? state.managedNamespaces : undefined;
            inputs["projectId"] = state ? state.projectId : undefined;
        } else {
            const args = argsOrState as GlobalClusterConfigurationArgs | undefined;
            if (!args || args.clusterName === undefined) {
                throw new Error("Missing required property 'clusterName'");
            }
            if (!args || args.projectId === undefined) {
                throw new Error("Missing required property 'projectId'");
            }
            inputs["clusterName"] = args ? args.clusterName : undefined;
            inputs["customZoneMappings"] = args ? args.customZoneMappings : undefined;
            inputs["managedNamespaces"] = args ? args.managedNamespaces : undefined;
            inputs["projectId"] = args ? args.projectId : undefined;
            inputs["customZoneMapping"] = undefined /*out*/;
        }
        super(GlobalClusterConfiguration.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GlobalClusterConfiguration resources.
 */
export interface GlobalClusterConfigurationState {
    readonly clusterName?: pulumi.Input<string>;
    /**
     * A map of all custom zone mappings defined for the Global Cluster. Atlas automatically maps each location code to the closest geographical zone. Custom zone mappings allow administrators to override these automatic mappings. If your Global Cluster does not have any custom zone mappings, this document is empty.
     */
    readonly customZoneMapping?: pulumi.Input<{[key: string]: any}>;
    /**
     * Each element in the list maps one ISO location code to a zone in your Global Cluster. See Custom Zone Mapping below for more details.
     */
    readonly customZoneMappings?: pulumi.Input<pulumi.Input<{ location?: pulumi.Input<string>, zone?: pulumi.Input<string> }>[]>;
    /**
     * Add a managed namespaces to a Global Cluster. For more information about managed namespaces, see [Global Clusters](https://docs.atlas.mongodb.com/reference/api/global-clusters/). See Managed Namespace below for more details.
     */
    readonly managedNamespaces?: pulumi.Input<pulumi.Input<{ collection: pulumi.Input<string>, customShardKey: pulumi.Input<string>, db: pulumi.Input<string> }>[]>;
    /**
     * The unique ID for the project to create the database user.
     * * `cluster_name - (Required) The name of the Global Cluster.
     */
    readonly projectId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GlobalClusterConfiguration resource.
 */
export interface GlobalClusterConfigurationArgs {
    readonly clusterName: pulumi.Input<string>;
    /**
     * Each element in the list maps one ISO location code to a zone in your Global Cluster. See Custom Zone Mapping below for more details.
     */
    readonly customZoneMappings?: pulumi.Input<pulumi.Input<{ location?: pulumi.Input<string>, zone?: pulumi.Input<string> }>[]>;
    /**
     * Add a managed namespaces to a Global Cluster. For more information about managed namespaces, see [Global Clusters](https://docs.atlas.mongodb.com/reference/api/global-clusters/). See Managed Namespace below for more details.
     */
    readonly managedNamespaces?: pulumi.Input<pulumi.Input<{ collection: pulumi.Input<string>, customShardKey: pulumi.Input<string>, db: pulumi.Input<string> }>[]>;
    /**
     * The unique ID for the project to create the database user.
     * * `cluster_name - (Required) The name of the Global Cluster.
     */
    readonly projectId: pulumi.Input<string>;
}
